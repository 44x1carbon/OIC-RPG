<?php


use App\Domain\Course\RepositoryInterface\CourseRepositoryInterface;
use App\Domain\GuildMember\ValueObjects\LoginInfo;
use App\Domain\GuildMember\ValueObjects\PassWord;
use App\Infrastracture\AuthData\AuthData;

class GuildMemberUpdateTest extends \Tests\TestCase
{
    protected $courseRepository;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->courseRepository = app(CourseRepositoryInterface::class);

        $guildMember = $this->sampleGuildMember(['password' => new Password('abcd1234')]);
        $authData = AuthData::findByLoginInfo(new LoginInfo($guildMember->mailAddress(), new PassWord("abcd1234")));
        $this->actingAs($authData);
    }

    public function testSuccess()
    {
        $response = $this->post(route('update_guild_member'),[
            'name' => 'テスト太郎',
            'course_id' => $this->courseRepository->all()[0]->id(),
            'gender' => 'female',
        ]);

        $response->assertStatus(200);
    }

    /**
     * 存在しないコースがリクエストされた場合
     */
    public function testCourseFail()
    {
        $response = $this->post(route('update_guild_member'),[
            'name' => 'テスト太郎',
            'course_id' => 'aaaa',
            'gender' => 'female',
        ]);

        $response->assertStatus(302);
    }
}