<?php

use App\Domain\Course\Course;
use App\Domain\GuildMember\Factory\GuildMemberFactory;
use App\Domain\GuildMember\RepositoryInterface\GuildMemberRepositoryInterface;
use App\Domain\GuildMember\Spec\GuildMemberSpec;
use App\Domain\GuildMember\ValueObjects\Gender;
use App\Domain\GuildMember\ValueObjects\LoginInfo;
use App\Domain\GuildMember\ValueObjects\MailAddress;
use App\Domain\GuildMember\ValueObjects\PassWord;
use App\Domain\GuildMember\ValueObjects\StudentNumber;
use App\Domain\PossessionSkill\PossessionSkillCollection;

/**
 * Created by PhpStorm.
 * User: user
 * Date: 2017/10/27
 * Time: 15:32
 */

class LoginInfoTest extends \Tests\TestCase
{
    /* @var GuildMemberRepositoryInterface $repo */
    protected $repo;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repo = app(GuildMemberRepositoryInterface::class);
        $studentNumber = new StudentNumber('B4000');
        $studentName = '新原佑亮';
        $course = new Course('1','ITスペシャリスト');
        $gender = new Gender('male');
        $mailAddress = new MailAddress('b4000@oic.jp');
        $guildMemberFactory = new GuildMemberFactory();
        $guildMember = $guildMemberFactory->createGuildMember($studentNumber, $studentName, $course, $gender, $mailAddress,  new PossessionSkillCollection([]));
        $this->repo->save($guildMember);
    }


    function testSuccess()
    {
        $mailAddress = new MailAddress('b4000@oic.jp');
        $passWord = new PassWord('Abcdefg1');
        $loginInfo = new LoginInfo($mailAddress, $passWord);
        $this->assertTrue($this->repo->findByLoginInfo($loginInfo) != null);
    }


    function testFail()
    {
        $mailAddress = new MailAddress('b3000@oic.jp');
        $passWord = new PassWord('Abcdefg1');
        $loginInfo = new LoginInfo($mailAddress, $passWord);
        $this->assertTrue($this->repo->findByLoginInfo($loginInfo) == null);
    }
}
