<?php

use App\ApplicationService\PartyAppService;
use App\Domain\PartyParticipationRequest\RepositoryInterface\PartyParticipationRequestRepositoryInterface;
use App\Presentation\PartyParticipationRequestFacade;
use Tests\Sampler;

/**
 * Created by PhpStorm.
 * User: yamagon
 * Date: 2017/12/15
 * Time: 16:15
 */

class SendPartyParticipationRequestTest extends \Tests\TestCase
{
    /* @var PartyParticipationRequestFacade $partyParticipationRequestFacade*/
    protected $partyParticipationRequestFacade;
    /* @var PartyParticipationRequestRepositoryInterface $partyParticipationRequestRepository */
    protected $sendPartyParticipationRequestRepository;

    protected $party;
    protected $guildMember;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->partyParticipationRequestFacade = app(PartyParticipationRequestFacade::class);
        $this->sendPartyParticipationRequestRepository = app(PartyParticipationRequestRepositoryInterface::class);
    }

    public function testSuccess()
    {
        $partyParticipationRequestId = $this->partyParticipationRequestFacade->sendPartyParticipationRequest("abcd","abcd", "B4999");

        $partyParticipationRequest = $this->sendPartyParticipationRequestRepository->findById($partyParticipationRequestId);

        $this->assertTrue($partyParticipationRequest->partyId() === "abcd");
        $this->assertTrue($partyParticipationRequest->wantedRoleId() === "abcd");
        $this->assertTrue($partyParticipationRequest->guildMemberId()->code() === "B4999");
    }
}