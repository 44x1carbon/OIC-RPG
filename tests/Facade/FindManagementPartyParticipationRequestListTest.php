<?php

use App\Domain\Party\RepositoryInterface\PartyRepositoryInterface;
use App\Presentation\PartyParticipationRequestFacade;
use Tests\Sampler;

/**
 * Created by PhpStorm.
 * User: yamagon
 * Date: 2017/12/27
 * Time: 20:45
 */

/**
 * 自分が管理しているパーティに対するパーティ参加申請のリストを取得するテスト
 */
class FindManagementPartyParticipationRequestListTest extends \Tests\TestCase
{
    use Sampler;

    /* @var PartyParticipationRequestFacade $partyParticipationRequestFacade */
    protected $partyParticipationRequestFacade;
    /* @var PartyRepositoryInterface $partyRepository */
    protected $partyRepository;

    protected $party1;
    protected $party2;
    protected $party3;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->partyParticipationRequestFacade = app(PartyParticipationRequestFacade::class);
        $this->partyRepository = app(PartyRepositoryInterface::class);

        $this->party1 = $this->sampleParty(['partyManagerId' => "B4000"]);
        $this->partyRepository->save($this->party1);
        $this->party2 = $this->sampleParty(['partyManagerId' => "B4000"]);
        $this->partyRepository->save($this->party2);
        $this->party3 = $this->sampleParty(['partyManagerId' => "B4000"]);
        $this->partyRepository->save($this->party3);

        $this->partyParticipationRequestFacade->registerPartyParticipationRequest($this->party1->id(),"abcd", "B4991");
        $this->partyParticipationRequestFacade->registerPartyParticipationRequest($this->party1->id(),"abcd", "B4992");
        $this->partyParticipationRequestFacade->registerPartyParticipationRequest($this->party2->id(),"abcd", "B4993");
        $this->partyParticipationRequestFacade->registerPartyParticipationRequest($this->party3->id(),"abcd", "B4994");
        $this->partyParticipationRequestFacade->registerPartyParticipationRequest($this->party3->id(),"abcd", "B4995");
    }

    public function testSuccess()
    {
        $findManagementPartyParticipationRequestList = $this->partyParticipationRequestFacade->findManagementPartyParticipationRequestList("B4000");

        // パーティIDをキーとして保存されているパーティ参加申請のリストが正しいものが取得できているか
        $this->assertTrue($findManagementPartyParticipationRequestList[$this->party2->id()][0]->guildMemberId()->code() === "B4993");

        // 存在しない場合空の配列が返ってくるのを確認
        $this->assertTrue($this->partyParticipationRequestFacade->findManagementPartyParticipationRequestList("B4444") === []);
    }
}