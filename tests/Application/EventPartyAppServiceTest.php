<?php

use App\ApplicationService\EventPartyAppService;
use App\Domain\Event\ValueObjects\EventId;
use App\Domain\EventParty\EventParty;
use App\Domain\EventParty\EventPartyRepositoryInterface;
use Tests\TestCase;

/**
 * Created by PhpStorm.
 * User: user
 * Date: 2018/02/12
 * Time: 6:47
 */


class EventPartyAppServiceTest extends TestCase
{
    /* @var EventPartyRepositoryInterface $repo */
    protected $repo;
    /* @var EventPartyAppService $appService */
    protected $appService;
    /* @var EventParty $eventParty */
    private $eventParty;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repo = app(EventPartyRepositoryInterface::class);
        $this->appService = app(EventPartyAppService::class);

        $this->eventParty = new EventParty(
            new EventId('aaaa'),
            'bbbb'
        );
    }

    public function testJoinEventSuccess()
    {
        $this->appService->joinEvent($this->eventParty->eventId(), $this->eventParty->partyId());
        $result = $this->repo->findByEventIdAndPartyId($this->eventParty->eventId(), $this->eventParty->partyId());
        $this->assertTrue($result->eventId()->code() === $this->eventParty->eventId()->code() &&
            $result->partyId() === $this->eventParty->partyId());
    }

    public function testJoinEventFail()
    {
        $this->appService->joinEvent(new EventId('aaaa'), 'bbbb');

        $this->assertFalse($this->appService->joinEvent(new EventId('aaaa'), 'bbbb'));
    }

    public function testUpdateWork()
    {
        $this->repo->save($this->eventParty);

        $this->appService->updateWork(
            $this->eventParty->eventId(),
            $this->eventParty->partyId(),
            $name = 'OIC-RPG',
            $introduction = 'OICでの学園生活をRPG化するサービス'
        );

        $result = $this->repo->findByEventIdAndPartyId($this->eventParty->eventId(), $this->eventParty->partyId());

        $this->assertTrue($result->workName() === $name && $result->workIntroduction() === $introduction);
    }
}
